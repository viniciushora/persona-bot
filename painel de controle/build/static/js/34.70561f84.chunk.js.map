{"version":3,"sources":["app/views/material-kit/checkbox/SimpleCheckbox.jsx","app/views/material-kit/checkbox/LabelledCheckbox.jsx","app/views/material-kit/checkbox/PlacingCheckboxLabel.jsx","app/views/material-kit/checkbox/FormGroupCheckbox.jsx","app/views/material-kit/checkbox/AppCheckbox.jsx"],"names":["SimpleCheckbox","_React$useState","React","useState","checkedA","checkedB","checkedF","_React$useState2","Object","slicedToArray","state","setState","handleChange","name","event","objectSpread2","[object Object]","target","checked","react_default","a","createElement","Checkbox","onChange","value","inputProps","aria-label","color","disabled","indeterminate","defaultChecked","GreenCheckbox","withStyles","root","green","&$checked","props","assign","LabelledCheckbox","checkedG","FormGroup","row","FormControlLabel","control","label","icon","FavoriteBorder_default","checkedIcon","Favorite_default","CheckBoxOutlineBlank_default","fontSize","CheckBox_default","PlacingCheckboxLabel","setValue","FormControl","component","FormLabel","labelPlacement","useStyles","makeStyles","theme","display","formControl","margin","spacing","FormGroupCheckbox","classes","gilad","jason","antoine","error","filter","v","length","className","FormHelperText","required","AppCheckbox","matx","routeSegments","path","title","checkbox_PlacingCheckboxLabel"],"mappings":"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","file":"static/js/34.70561f84.chunk.js","sourcesContent":["import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport default function SimpleCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Checkbox\n        checked={state.checkedA}\n        onChange={handleChange(\"checkedA\")}\n        value=\"checkedA\"\n        inputProps={{\n          \"aria-label\": \"primary checkbox\"\n        }}\n      />\n      <Checkbox\n        checked={state.checkedB}\n        onChange={handleChange(\"checkedB\")}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{\n          \"aria-label\": \"secondary checkbox\"\n        }}\n      />\n      <Checkbox\n        value=\"checkedC\"\n        inputProps={{\n          \"aria-label\": \"uncontrolled-checkbox\"\n        }}\n      />\n      <Checkbox\n        disabled\n        value=\"checkedD\"\n        inputProps={{\n          \"aria-label\": \"disabled checkbox\"\n        }}\n      />\n      <Checkbox\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{\n          \"aria-label\": \"disabled checked checkbox\"\n        }}\n      />\n      <Checkbox\n        checked={state.checkedF}\n        onChange={handleChange(\"checkedF\")}\n        value=\"checkedF\"\n        indeterminate\n        inputProps={{\n          \"aria-label\": \"indeterminate checkbox\"\n        }}\n      />\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        value=\"checkedG\"\n        inputProps={{\n          \"aria-label\": \"checkbox with default color\"\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nexport default function LabelledCheckbox() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedA}\n            onChange={handleChange(\"checkedA\")}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel\n        control={<Checkbox value=\"checkedC\" />}\n        label=\"Uncontrolled\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Checkbox value=\"checkedD\" />}\n        label=\"Disabled\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Checkbox checked value=\"checkedE\" />}\n        label=\"Disabled\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange(\"checkedF\")}\n            value=\"checkedF\"\n            indeterminate\n          />\n        }\n        label=\"Indeterminate\"\n      />\n      <FormControlLabel\n        control={\n          <GreenCheckbox\n            checked={state.checkedG}\n            onChange={handleChange(\"checkedG\")}\n            value=\"checkedG\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<FavoriteBorder />}\n            checkedIcon={<Favorite />}\n            value=\"checkedH\"\n          />\n        }\n        label=\"Custom icon\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n            value=\"checkedI\"\n          />\n        }\n        label=\"Custom size\"\n      />\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nfunction PlacingCheckboxLabel() {\n  const [value, setValue] = React.useState(\"female\");\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\n      <FormGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={handleChange}\n        row\n      >\n        <FormControlLabel\n          value=\"top\"\n          control={<Checkbox color=\"primary\" />}\n          label=\"Top\"\n          labelPlacement=\"top\"\n        />\n        <FormControlLabel\n          value=\"start\"\n          control={<Checkbox color=\"primary\" />}\n          label=\"Start\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          value=\"bottom\"\n          control={<Checkbox color=\"primary\" />}\n          label=\"Bottom\"\n          labelPlacement=\"bottom\"\n        />\n        <FormControlLabel\n          value=\"end\"\n          control={<Checkbox color=\"primary\" />}\n          label=\"End\"\n          labelPlacement=\"end\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default PlacingCheckboxLabel;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  formControl: {\n    margin: theme.spacing(2)\n  }\n}));\n\nexport default function FormGroupCheckbox() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={gilad}\n                onChange={handleChange(\"gilad\")}\n                value=\"gilad\"\n              />\n            }\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={jason}\n                onChange={handleChange(\"jason\")}\n                value=\"jason\"\n              />\n            }\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={antoine}\n                onChange={handleChange(\"antoine\")}\n                value=\"antoine\"\n              />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n      <FormControl\n        required\n        error={error}\n        component=\"fieldset\"\n        className={classes.formControl}\n      >\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={gilad}\n                onChange={handleChange(\"gilad\")}\n                value=\"gilad\"\n              />\n            }\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={jason}\n                onChange={handleChange(\"jason\")}\n                value=\"jason\"\n              />\n            }\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={antoine}\n                onChange={handleChange(\"antoine\")}\n                value=\"antoine\"\n              />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SimpleCheckbox from \"./SimpleCheckbox\";\nimport LabelledCheckbox from \"./LabelledCheckbox\";\nimport PlacingCheckboxLabel from \"./PlacingCheckboxLabel\";\nimport FormGroupCheckbox from \"./FormGroupCheckbox\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\n\nconst AppCheckbox = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Chckbox\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"simple checkbox\">\n        <SimpleCheckbox />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Checkbox with Label\">\n        <LabelledCheckbox />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Checkbox with Form Group\">\n        <FormGroupCheckbox />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Checkbox with Different Label Placement\">\n        <PlacingCheckboxLabel />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppCheckbox;\n"],"sourceRoot":""}