{"version":3,"sources":["app/views/material-kit/switch/SijmpleSwitch.jsx","app/views/material-kit/switch/LabelledSwitch.jsx","app/views/material-kit/switch/FormGroupSwitch.jsx","app/views/material-kit/switch/CustomizedSwitch.jsx","app/views/material-kit/switch/PlacingSwitchLabel.jsx","app/views/material-kit/switch/AppSwitch.jsx"],"names":["SimpleSwitch","_React$useState","React","useState","checkedA","checkedB","_React$useState2","Object","slicedToArray","state","setState","handleChange","name","event","objectSpread2","[object Object]","target","checked","react_default","a","createElement","Switch","onChange","value","inputProps","aria-label","color","disabled","defaultChecked","LabelledSwitch","FormGroup","row","FormControlLabel","control","label","FormGroupSwitch","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","PurpleSwitch","withStyles","switchBase","purple","&$checked","&$checked + $track","backgroundColor","track","IOSSwitch","theme","root","width","height","padding","margin","spacing","transform","palette","common","white","& + $track","opacity","border","&$focusVisible $thumb","thumb","borderRadius","concat","grey","transition","transitions","create","focusVisible","_ref","classes","props","objectWithoutProperties","assign","focusVisibleClassName","disableRipple","AntSwitch","display","primary","main","borderColor","boxShadow","CustomizedSwitch","checkedC","Typography","Grid","container","alignItems","item","PlacingSwitchLabel","setValue","labelPlacement","AppSwitch","className","matx","routeSegments","path","title","switch_PlacingSwitchLabel"],"mappings":"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","file":"static/js/42.0671c340.chunk.js","sourcesContent":["import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function SimpleSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <div>\n      <Switch\n        checked={state.checkedA}\n        onChange={handleChange(\"checkedA\")}\n        value=\"checkedA\"\n        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n      />\n      <Switch\n        checked={state.checkedB}\n        onChange={handleChange(\"checkedB\")}\n        value=\"checkedB\"\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <Switch\n        value=\"checkedC\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <Switch\n        disabled\n        value=\"checkedD\"\n        inputProps={{ \"aria-label\": \"disabled checkbox\" }}\n      />\n      <Switch\n        disabled\n        checked\n        value=\"checkedE\"\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n      />\n      <Switch\n        defaultChecked\n        value=\"checkedF\"\n        color=\"default\"\n        inputProps={{ \"aria-label\": \"checkbox with default color\" }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function LabelledSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedA}\n            onChange={handleChange(\"checkedA\")}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel\n        control={<Switch value=\"checkedC\" />}\n        label=\"Uncontrolled\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch value=\"checkedD\" />}\n        label=\"Disabled\"\n      />\n      <FormControlLabel\n        disabled\n        control={<Switch checked value=\"checkedE\" />}\n        label=\"Disabled\"\n      />\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function FormGroupSwitch() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.gilad}\n              onChange={handleChange(\"gilad\")}\n              value=\"gilad\"\n            />\n          }\n          label=\"Gilad Gray\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.jason}\n              onChange={handleChange(\"jason\")}\n              value=\"jason\"\n            />\n          }\n          label=\"Jason Killian\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={state.antoine}\n              onChange={handleChange(\"antoine\")}\n              value=\"antoine\"\n            />\n          }\n          label=\"Antoine Llorca\"\n        />\n      </FormGroup>\n      <FormHelperText>Be careful</FormHelperText>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { purple } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    \"&$checked\": {\n      color: purple[500]\n    },\n    \"&$checked + $track\": {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\n\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(16px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#52d869\",\n        opacity: 1,\n        border: \"none\"\n      }\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#52d869\",\n      border: \"6px solid #fff\"\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked\n      }}\n      {...props}\n    />\n  );\n});\n\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: \"flex\"\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    \"&$checked\": {\n      transform: \"translateX(12px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: \"none\"\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\n\nexport default function CustomizedSwitch() {\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <PurpleSwitch\n            checked={state.checkedA}\n            onChange={handleChange(\"checkedA\")}\n            value=\"checkedA\"\n          />\n        }\n        label=\"Custom color\"\n      />\n      <FormControlLabel\n        control={\n          <IOSSwitch\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n          />\n        }\n        label=\"iOS style\"\n      />\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n          <Grid item>Off</Grid>\n          <Grid item>\n            <AntSwitch\n              checked={state.checkedC}\n              onChange={handleChange(\"checkedC\")}\n              value=\"checkedC\"\n            />\n          </Grid>\n          <Grid item>On</Grid>\n        </Grid>\n      </Typography>\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nfunction PlacingSwitchLabel() {\n  const [value, setValue] = React.useState(\"female\");\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\n      <FormGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={handleChange}\n        row\n      >\n        <FormControlLabel\n          value=\"top\"\n          control={<Switch color=\"primary\" />}\n          label=\"Top\"\n          labelPlacement=\"top\"\n        />\n        <FormControlLabel\n          value=\"start\"\n          control={<Switch color=\"primary\" />}\n          label=\"Start\"\n          labelPlacement=\"start\"\n        />\n        <FormControlLabel\n          value=\"bottom\"\n          control={<Switch color=\"primary\" />}\n          label=\"Bottom\"\n          labelPlacement=\"bottom\"\n        />\n        <FormControlLabel\n          value=\"end\"\n          control={<Switch color=\"primary\" />}\n          label=\"End\"\n          labelPlacement=\"end\"\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n\nexport default PlacingSwitchLabel;\n","import React from \"react\";\nimport SimpleSwitch from \"./SijmpleSwitch\";\nimport LabelledSwitch from \"./LabelledSwitch\";\nimport FormGroupSwitch from \"./FormGroupSwitch\";\nimport CustomizedSwitch from \"./CustomizedSwitch\";\nimport PlacingSwitchLabel from \"./PlacingSwitchLabel\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\n\nconst AppSwitch = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div  className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Switch\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"Simple Switch\">\n        <SimpleSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Switch with Label\">\n        <LabelledSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Switch with Form Group\">\n        <FormGroupSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Customized Switch\">\n        <CustomizedSwitch />\n      </SimpleCard>\n      <div className=\"py-12\" />\n      <SimpleCard title=\"Switch with Different Label Placement\">\n        <PlacingSwitchLabel />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppSwitch;\n"],"sourceRoot":""}