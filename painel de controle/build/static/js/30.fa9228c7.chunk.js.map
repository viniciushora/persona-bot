{"version":3,"sources":["app/MatxLayout/SharedCompoents/NotificationBar.jsx","app/MatxLayout/Layout1/Layout1Topbar.jsx","app/navigations.js","app/MatxLayout/SharedCompoents/Sidenav.jsx","app/MatxLayout/SharedCompoents/Brand.jsx","app/MatxLayout/MatxTheme/SidenavTheme.jsx","app/MatxLayout/Layout1/Layout1Sidenav.jsx","app/MatxLayout/Layout1/Layout1.jsx"],"names":["withStyles","withTheme","connect","state","createNotification","PropTypes","func","isRequired","getNotification","deleteNotification","deleteAllNotification","notification","settings","layout","props","container","theme","_props$notification","notifcationList","_React$useState","React","useState","_React$useState2","Object","slicedToArray","panelOpen","setPanelOpen","looper","setInterval","clearInterval","handleDrawerToggle","parentThemePalette","palette","react_default","a","createElement","ThemeProvider","themes","activeTheme","IconButton","onClick","style","color","type","text","secondary","primary","Badge","badgeContent","length","Icon","Drawer","width","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","key","id","size","fontSize","react_router_dom","to","concat","path","Card","elevation","icon","name","heading","getTimeDifference","Date","timestamp","title","subtitle","Button","Layout1Topbar","updateSidebarMode","sidebarSettings","_this$props","_this","setLayoutSettings","objectSpread2","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","logoutUser","_this$props2","this","topbarTheme","topbar","assign","backgroundColor","main","SharedCompoents_NotificationBar","Component","root","withRouter","navigations","children","iconText","Sidenav","activeLayoutSettingsName","activeLayout","activeLayoutSettings","[object Object]","renderOverlay","react","lib_default","option","suppressScrollX","matx","navigation","Brand","SidenavTheme","_ref","Helmet","bgImgURL","bgOpacity","Layout1Sidenav","padding","sidenavToggleChecked","setDefaultSettings","updatedSettings","handleSidenavToggle","setState","renderLogoSwitch","SharedCompoents_Brand","Switch","onChange","checked","_this2","unlistenRouteChange","history","listen","location","action","sidenavTheme","MatxTheme_SidenavTheme","SharedCompoents_Sidenav","user","Layout1","classes","layoutClasses","topbar-fixed","fixed","appContext","Consumer","routes","classList","show","Layout1_Layout1Sidenav","Layout1_Layout1Topbar","perfectScrollbar","height","renderRoutes","background","default"],"mappings":"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","file":"static/js/30.fa9228c7.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Icon,\n  Badge,\n  MuiThemeProvider,\n  Card,\n  Button,\n  IconButton,\n  Drawer,\n  Fab\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  createNotification,\n  getNotification,\n  deleteAllNotification,\n  deleteNotification\n} from \"../../redux/actions/NotificationActions\";\n\nfunction NotificationBar(props) {\n  const {\n    container,\n    theme,\n    settings,\n    notification: notifcationList = [],\n    getNotification,\n    deleteAllNotification,\n    deleteNotification\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  var looper = setInterval(atualizaMarcador, 5000)\n\n  function atualizaMarcador(){\n    getNotification();\n    clearInterval(looper);\n  }\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n    setPanelOpen(!panelOpen);\n  }\n  const parentThemePalette = theme.palette;\n  // console.log(theme);\n\n  return (\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\n      <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={notifcationList.length}>\n          <Icon>notifications</Icon>\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        width={\"100px\"}\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"notification\">\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\n            <Icon color=\"primary\">notifications</Icon>\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notificações</h5>\n          </div>\n\n          {notifcationList.map(notification => (\n            <div\n              key={notification.id}\n              className=\"notification__card position-relative\"\n            >\n              <IconButton\n                size=\"small\"\n                className=\"delete-button bg-light-gray mr-24\"\n                onClick={() => deleteNotification(notification.id)}\n              >\n                <Icon className=\"text-muted\" fontSize=\"small\">\n                  clear\n                </Icon>\n              </IconButton>\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\n                <Card className=\"mx-16 mb-24\" elevation={3}>\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\n                    <div className=\"flex\">\n                      <div className=\"card__topbar__button\">\n                        <Icon\n                          className=\"card__topbar__icon\"\n                          fontSize=\"small\"\n                          color={notification.icon.color}\n                        >\n                          {notification.icon.name}\n                        </Icon>\n                      </div>\n                      <span className=\"ml-4 font-weight-500 text-muted\">\n                        {notification.heading}\n                      </span>\n                    </div>\n                    <small className=\"card__topbar__time text-muted\">\n                      {getTimeDifference(new Date(notification.timestamp))} ago\n                    </small>\n                  </div>\n                  <div className=\"px-16 pt-8 pb-16\">\n                    <p className=\"m-0\">{notification.title}</p>\n                    <small className=\"text-muted\">\n                      {notification.subtitle}\n                    </small>\n                  </div>\n                </Card>\n              </Link>\n            </div>\n          ))}\n\n          <div className=\"text-center\">\n            <Button onClick={deleteAllNotification}>Limpar notificações</Button>\n          </div>\n        </div>\n      </Drawer>\n    </MuiThemeProvider>\n  );\n}\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  createNotification: PropTypes.func.isRequired,\n  getNotification: PropTypes.func.isRequired,\n  deleteNotification: PropTypes.func.isRequired,\n  deleteAllNotification: PropTypes.func.isRequired,\n  notification: state.notification,\n  settings: state.layout.settings\n});\n\nexport default withStyles({}, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { createNotification, getNotification, deleteNotification, deleteAllNotification }\n  )(NotificationBar)\n);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Icon,\n  IconButton,\n  withStyles,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { PropTypes } from \"prop-types\";\nimport { isMdScreen } from \"utils\";\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n});\n\nclass Layout1Topbar extends Component {\n  state = {};\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n\n    setLayoutSettings({\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  handleSidebarToggle = () => {\n    let { settings } = this.props;\n    let { layout1Settings } = settings;\n\n    let mode;\n    if (isMdScreen()) {\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\n    } else {\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\n    }\n    this.updateSidebarMode({ mode });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  render() {\n    let { theme, settings, className, style } = this.props;\n    const topbarTheme =\n      settings.themes[settings.layout1Settings.topbar.theme] || theme;\n    return (\n      <MuiThemeProvider theme={topbarTheme}>\n        <div className=\"topbar\">\n          <div\n            className={`topbar-hold ${className}`}\n            style={Object.assign({}, { backgroundColor: topbarTheme.palette.primary.main }, style)}\n          >\n            <div className=\"flex flex-space-between flex-middle h-100\">\n              <div className=\"flex\">\n                <IconButton onClick={this.handleSidebarToggle}>\n                  <Icon>menu</Icon>\n                </IconButton>\n\n              </div>\n              <div className=\"flex flex-middle\">\n                <NotificationBar />\n              </div>\n            </div>\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLayout1Topbar.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(mapStateToProps, { setLayoutSettings})(Layout1Topbar)\n  )\n);\n","export const navigations = [\n  {\n    name: \"Início\",\n    path: \"/dashboard/inicio\",\n    icon: \"dashboard\"\n  },\n  {\n    name: \"Cadastro\",\n    icon: \"description\",\n    children: [\n      {\n        name: \"Personagem\",\n        path: \"/cadastro/personagem\",\n        iconText: \"P1\"\n      },\n      {\n        name: \"Persona\",\n        path: \"/cadastro/persona\",\n        iconText: \"P2\"\n      },\n      {\n        name: \"Shadow\",\n        path: \"/cadastro/shadow\",\n        iconText: \"S\"\n      },\n      {\n        name: \"Item\",\n        path: \"/cadastro/item\",\n        iconText: \"I\"\n      },\n      {\n        name: \"Habilidade\",\n        path: \"/cadastro/habilidade\",\n        iconText: \"H\"\n      }\n    ]\n  },\n  {\n    name: \"Listagem (WIP)\",\n    icon: \"format_list_bulleted\",\n    path: \"/naoexiste\"\n  },\n  {\n    name: \"Edição (WIP)\",\n    icon: \"edit\",\n    path: \"/naoexiste\"\n  },\n\n  {\n    name: \"Configurações\",\n    path: \"/config\",\n    icon: \"settings\"\n  },\n  \n  \n];\n","import React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nclass Sidenav extends Component {\n  state = {};\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    let activeLayoutSettingsName = settings.activeLayout+\"Settings\";\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    setLayoutSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  renderOverlay = () => (\n    <div\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\n      className=\"sidenav__overlay\"\n    />\n  );\n  render() {\n    return (\n      <Fragment>\n        <Scrollbar option={{suppressScrollX: true}} className=\"scrollable position-relative\">\n          {this.props.children}\n          <MatxVerticalNav navigation={navigations} />\n        </Scrollbar>\n        {this.renderOverlay()}\n      </Fragment>\n    );\n  }\n}\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      setLayoutSettings\n    }\n  )(Sidenav)\n);","import React, { Component } from \"react\";\n\nclass Brand extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"flex flex-middle flex-space-between brand-area\">\n        <div className=\"flex flex-middle brand\">\n          <span className=\"brand__text\">PersonaBot</span>\n        </div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Brand;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst SidenavTheme = ({ theme, settings }) => {\n\n  function darkHoverStyle() {\n    return theme.palette.type === \"dark\"\n      ? `.navigation .nav-item:hover,\n        .navigation .nav-item.active {\n          color: ${theme.palette.text.primary};\n        }`\n      : \"\";\n  }\n\n  function lightHoverStyle() {\n    return theme.palette.type === \"light\"\n      ? `.navigation .nav-item:hover,\n        .navigation .nav-item.active,\n        .navigation .submenu {\n          background: rgba(0, 0, 0, .08);\n        }`\n      : \"\";\n  }\n\n  return (\n    <Helmet>\n      <style>\n        {`\n        \n        ${\n          theme.palette.type === \"dark\"\n            ? `.sidenav {\n          color: ${theme.palette.text.secondary};\n        }`\n            : \" \"\n        }\n\n        .sidenav__hold {\n          background-image: url(${\n            settings.layout1Settings.leftSidebar.bgImgURL\n          });\n          opacity: 1 !important;\n        }\n        .sidenav__hold::after {\n          background: ${theme.palette.primary.main};\n          opacity: ${settings.layout1Settings.leftSidebar.bgOpacity};\n        }\n        .navigation .nav-item:not(.badge) {\n          color: ${theme.palette.text.primary};\n        }\n        .navigation .nav-item .icon-text::after {\n          background: ${theme.palette.text.primary};\n        }\n        .navigation .nav-item.active, \n        .navigation .nav-item.active:hover {\n          background: ${theme.palette.secondary.main};\n        }\n\n        \n        ${darkHoverStyle()}\n        \n      `}\n      </style>\n    </Helmet>\n  );\n};\n\nexport default SidenavTheme;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Switch,\n  Icon,\n  withStyles,\n  IconButton,\n  MuiThemeProvider\n} from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../MatxTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\n\nconst styles = theme => ({});\n\nconst IconButtonWhite = withStyles(theme => ({\n  root: {\n    // color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: \"transparent\",\n    padding: \"5px\"\n  }\n}))(IconButton);\n\nconst IconSmall = withStyles(() => ({\n  root: {\n    fontSize: \"1rem\"\n  }\n}))(Icon);\n\nclass Layout1Sidenav extends Component {\n  state = {\n    sidenavToggleChecked: false,\n  };\n\n  componentWillMount() {\n\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMdScreen()) {\n        this.updateSidebarMode({ mode: \"close\" });\n      }\n    });\n\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    const updatedSettings = {\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    };\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  handleSidenavToggle = () => {\n    let { sidenavToggleChecked } = this.state;\n    let mode = sidenavToggleChecked ? \"full\" : \"compact\";\n    this.updateSidebarMode({ mode });\n    this.setState({ sidenavToggleChecked: !sidenavToggleChecked });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  renderLogoSwitch = () => (\n    // Open Brand component file to replace logo and text\n    <Brand>\n      <Switch\n        className=\"sidenav__toggle show-on-lg\"\n        onChange={this.handleSidenavToggle}\n        checked={!this.state.sidenavToggleChecked}\n        color=\"secondary\"\n      />\n    </Brand>\n  );\n\n  render() {\n    let { theme, settings } = this.props;\n    const sidenavTheme =\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n    return (\n      <MuiThemeProvider theme={sidenavTheme}>\n        <SidenavTheme theme={sidenavTheme} settings={settings} />\n\n        <div className=\"sidenav\">\n          <div className=\"sidenav__hold\">\n            {(\n              <Fragment>\n                {this.renderLogoSwitch()}\n                <Sidenav/>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(mapStateToProps, {\n      setLayoutSettings,\n      setDefaultSettings\n    })(Layout1Sidenav)\n  )\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles } from \"@material-ui/core\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { isMdScreen, classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport AppContext from \"app/appContext\";\n\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nclass Layout1 extends Component {\n  componentWillMount() {\n    if (isMdScreen()) {\n      this.updateSidebarMode({ mode: \"close\" });\n    }\n  }\n\n  componentWillUnmount() {\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings({\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  render() {\n    let { settings, classes, theme } = this.props;\n\n    let { layout1Settings } = settings;\n    let layoutClasses = {\n      [classes.layout]: true,\n      [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\n      \"topbar-fixed\": layout1Settings.topbar.fixed\n    };\n    return (\n      <AppContext.Consumer>\n        {({ routes }) => (\n          <div className={classList(layoutClasses)}>\n            {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\n\n            <div className=\"content-wrap position-relative\">\n              {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                <Layout1Topbar className=\"elevation-z8\"/>\n              )}\n\n              {settings.perfectScrollbar && (\n                <Scrollbar className=\"scrollable-content\">\n                  {layout1Settings.topbar.show &&\n                    !layout1Settings.topbar.fixed && <Layout1Topbar style={{height: '80px'}} />}\n                  <div className=\"content\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\" />\n                </Scrollbar>\n              )}\n\n              {!settings.perfectScrollbar && (\n                <div className=\"scrollable-content\">\n                  {layout1Settings.topbar.show &&\n                    !layout1Settings.topbar.fixed && <Layout1Topbar />}\n                  <div className=\"content\">{renderRoutes(routes)}</div>\n                  <div className=\"my-auto\" />\n                </div>\n              )}\n\n            </div>\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { setLayoutSettings }\n  )(Layout1)\n);\n"],"sourceRoot":""}